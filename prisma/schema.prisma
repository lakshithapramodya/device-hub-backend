// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  first_name    String
  last_name     String
  email         String         @unique
  password      String
  refreshTokens RefreshToken[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  tokenHash String
  used      Boolean  @default(false)
  expiresAt DateTime
  issuedAt  DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("refresh_token")
}


model Location {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  address   String
  status    LocationStatus
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  Device    Device[]

  @@map("locations")
}

model Device {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String?
  imageUrl     String
  serialNumber String       @unique
  type         DeviceType
  status       DeviceStatus
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  locationId String   @db.ObjectId
  location   Location @relation(fields: [locationId], references: [id], onDelete: Cascade)

  @@map("devices")
}

enum DeviceType {
  pos
  kiosk
  signage
}

enum DeviceStatus {
  Active
  Inactive
}

enum LocationStatus {
  Active
  Inactive
}
